{"version":3,"sources":["reportWebVitals.ts","i18nextInit.js","util/userContext.ts","containers/NotFoundPage/NotFoundPage.tsx","containers/Login/Login.tsx","assets/images/logo-white.png","components/MainHeader/MainHeader.tsx","components/NavBar/NavBar.tsx","settings.ts","util/ApiTools.ts","containers/ShoppingList/ShoppingItem.tsx","components/LoadingSpinner/LoadingSpinner.tsx","containers/ShoppingList/ShoppingList.tsx","containers/Messenger/Messenger.tsx","containers/Settings/Settings.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","fa","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","detection","checkWhitelist","debug","whitelist","interpolation","escapeValue","UserContext","createContext","NotFoundPage","Login","MainHeader","className","style","fontFamily","src","whiteLogo","alt","NavBar","t","useTranslation","height","to","apiBaseUrl","process","REACT_APP_API_BASE_URL","apiVersion","REACT_APP_API_VERSION","SUCCESS_OK","SUCCESS_CREATED","SUCCESS_ACCEPTED","SUCCESS_NO_CONTENT","NO_ERROR_MESSAGE","sendData","apiAddress","data","baseUrl","version","httpMethod","fetch","JSON","stringify","response","json","status","statusText","a","data2","Error","message","ShoppingItem","item","onChange","id","title","isBought","description","createDate","useState","isOpen","setIsOpen","moment","loadPersian","dialect","usePersianDigits","onClick","type","checked","length","substring","format","LoadingSpinner","color","size","ShoppingList","items","setItems","isLoading","setIsLoading","titleInputRef","React","useRef","readShoppingItemsData","Date","err","console","log","createShoppingItem","result","toast","success","addClickHandle","event","charCode","target","value","current","shoppingItemCheckHandle","itemId","useEffect","onKeyPress","top","map","Messenger","Settings","lang","setLang","localStorage","getItem","setItem","i18next","changeLanguage","App","isLoggedIn","setIsLoggedIn","userInfo","setUserInfo","Provider","path","component","exact","rtl","draggable","closeOnClick","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1947493.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport translationEN from \"./assets/locales/en/translation.json\";\nimport translationFA from \"./assets/locales/fa/translation.json\";\n\nconst fallbackLng = [\"en\"];\nconst availableLanguages = [\"en\", \"fa\"];\n\nconst resources = {\n  en: {\n    translation: translationEN,\n  },\n  fa: {\n    translation: translationFA,\n  },\n};\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng,\n\n    detection: {\n      checkWhitelist: true,\n    },\n\n    debug: false,\n\n    whitelist: availableLanguages,\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);\n","import React from \"react\";\n\nconst NotFoundPage = (): JSX.Element => (\n  <div>\n    404\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nconst Login = (): JSX.Element => (\n  <div>\n    Login Page\n  </div>\n);\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/logo-white.38a3a261.png\";","import React from \"react\";\nimport whiteLogo from \"../../assets/images/logo-white.png\";\n\nconst MainHeader = (): JSX.Element => (\n  <div className=\"flex flex-row justify-center items-center h-10 text-white bg-gradient-to-b from-my-violet-dark to-my-violet\">\n    <span className=\"text-2xl font-bold\" style={{fontFamily: \"Times\"}}>anbilak</span>\n    <img src={whiteLogo} alt=\"Xanbilak Logo\" className=\"w-6\" />\n  </div>\n);\n\nexport default MainHeader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { IoMdSettings } from \"react-icons/io\";\nimport { TiMessages } from \"react-icons/ti\";\nimport { FaListOl } from \"react-icons/fa\";\n\nconst NavBar = (): JSX.Element => {\n\n  // eslint-disable-next-line id-length\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"flex flex-row sticky bottom-0 w-full bg-gradient-to-b from-white to-gray-300\" style={{height: '75px'}}>\n      <Link to={\"/\"} className=\"w-1/3 no-underline\">\n        <div className=\"flex flex-col justify-center items-center text-gray-700 hover:text-red-700\">\n          <span>{t(\"shopping_list\")}</span>\n          <FaListOl className=\"hover:text-red-700 w-5 h-5\" />\n        </div>\n      </Link>\n      <Link to={\"/messenger\"} className=\"w-1/3 no-underline\">\n        <div className=\"flex flex-col justify-center items-center text-gray-700 hover:text-blue-700\">\n          <span>{t(\"messenger\")}</span>\n          <TiMessages className=\"text-blue-700 w-6 h-6\" />\n        </div>\n      </Link>\n      <Link to={\"/settings\"} className=\"w-1/3 no-underline\">\n        <div className=\"flex flex-col justify-center items-center text-gray-700 hover:text-green-700\">\n          <span>{t(\"settings\")}</span>\n          <IoMdSettings className=\"text-green-700 w-5 h-5\" />\n        </div>\n      </Link>\n    </div>\n  );\n\n};\n\nexport default NavBar;\n","export const apiBaseUrl: string = process.env.REACT_APP_API_BASE_URL || \"\";\nexport const apiVersion: string = process.env.REACT_APP_API_VERSION || \"\";\n","/* eslint-disable max-params */\nimport { apiBaseUrl, apiVersion } from \"../settings\";\n\nconst SUCCESS_OK = 200;\nconst SUCCESS_CREATED = 201;\nconst SUCCESS_ACCEPTED = 202;\nconst SUCCESS_NO_CONTENT = 204;\nconst NO_ERROR_MESSAGE = \"No error message\";\n\nexport const getData = (\n  apiAddress: string, baseUrl: string = apiBaseUrl,\n  version: string = apiVersion,\n): any => fetch(\n  `${baseUrl}/${version}/${apiAddress}`,\n  {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"accept\": \"application/json\",\n    },\n  },\n).then((response) => ({\n  response: response.json(),\n  status: response.status,\n  statusText: response.statusText,\n}))\n  .then(async ({ response, status, statusText }) => {\n\n    switch (status) {\n\n    case SUCCESS_OK:\n    case SUCCESS_CREATED:\n    case SUCCESS_ACCEPTED:\n    case SUCCESS_NO_CONTENT:\n      return response;\n    default:\n      // eslint-disable-next-line no-case-declarations\n      const data = await response;\n\n      /*\n       * X return \"Error \" + status + \" : \" +\n       * (data && data.message ? data.message : statusText\n       *    ? statusText : 'No error message')\n       */\n\n      // eslint-disable-next-line no-nested-ternary\n      throw new Error(`Error ${status} : ${data && data.message\n        ? data.message\n        : statusText\n          ? statusText\n          : NO_ERROR_MESSAGE}`);\n\n    }\n\n  });\n\n/*\n * .catch(err => {\n *      console.error('Error in calling API: ', err);\n *  });\n */\n\nexport const sendData = (\n  apiAddress: string, data: any, baseUrl: string = apiBaseUrl,\n  // eslint-disable-next-line max-len\n  version: string = apiVersion, httpMethod = \"POST\",\n): any => fetch(\n  `${baseUrl}/${version}/${apiAddress}`,\n  {\n    // POST Or PUT Or DELETE\n    \"method\": httpMethod,\n    \"headers\": {\n      \"content-type\": \"application/json\",\n      \"accept\": \"application/json\",\n    },\n    \"body\": JSON.stringify(data),\n  },\n).then((response) => ({\n  response: response.json(),\n  status: response.status,\n  statusText: response.statusText,\n}))\n  .then(async ({ response, status, statusText }) => {\n\n    switch (status) {\n\n    case SUCCESS_OK:\n    case SUCCESS_CREATED:\n    case SUCCESS_ACCEPTED:\n    case SUCCESS_NO_CONTENT:\n      return response;\n    default:\n      // eslint-disable-next-line no-case-declarations\n      const data2 = await response;\n      throw new Error(`Error ${status} : ${\n        // eslint-disable-next-line no-nested-ternary\n        data2 && data2.message\n          ? data2.message\n          : statusText\n            ? statusText\n            : NO_ERROR_MESSAGE}`);\n\n    }\n\n  });\n\n/*\n * .catch(err => {\n *      console.error('Error: ', err);\n *  });\n */\n","import React, { useState } from \"react\";\nimport { BuyableItem } from \"../../types/BuyableItem\";\nimport moment from \"moment-jalaali\";\nimport { BiCalendarPlus } from \"react-icons/bi\";\n// eslint-disable-next-line no-duplicate-imports\nimport { BiTimeFive } from \"react-icons/bi\";\n\ninterface inputProps {\n    item:BuyableItem,\n    onChange: any\n}\n\nconst ShoppingItem = ({ item, onChange }: inputProps): JSX.Element => {\n\n  const { id, title, isBought, description, createDate } = item;\n  const [isOpen, setIsOpen] = useState(false);\n\n  moment.loadPersian({ dialect: \"persian-modern\",\n    usePersianDigits: true });\n\n  const TITLE_MAX_LENGTH = 30;\n  const TITLE_MIN_LENGTH = 0;\n\n  return (\n    <li className=\"mb-1 cursor-pointer\">\n      <div className=\"bg-my-silver p-1 rounded-md\" onClick={() => setIsOpen(!isOpen)}>\n        <input type=\"checkbox\" onChange={() => onChange(id)}\n          checked={isBought} />\n        <span className=\"mr-1\">\n          {title.length > TITLE_MAX_LENGTH && !isOpen\n            ? title.substring(TITLE_MIN_LENGTH, TITLE_MAX_LENGTH) + \"...\"\n            : title\n          }\n        </span>\n      </div>\n      <div className={\"flex flex-col bg-my-silver-dark p-1\" + (isOpen ? \"\" : \" hidden\")}>\n        <div className=\"text-xs text-red-700 text-center\">\n          {description}\n        </div>\n        <div className=\"flex flex-row justify-around text-xs text-gray-500\">\n          <div className=\"flex items-center\">\n            <BiCalendarPlus className=\"abc my-0 mx-1 text-gray-500 w-4 h-4\" />\n            {moment(createDate).format(\"dddd، jD jMMMM jYYYY\")}\n          </div>\n          <div className=\"flex items-center\">\n            <BiTimeFive className=\"abc my-0 mx-1 text-gray-500 w-4 h-4\" />\n            {moment(createDate).format(\"HH:mm:ss\")}\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n\n};\n\nexport default ShoppingItem;\n","import React from \"react\";\n//import { css } from \"@emotion/react\";\n//import ClipLoader from \"react-spinners/ClipLoader\";\n\n// const override = css`\n// display: block;\n// margin: 0 auto;\n// border-color: #AE00FF;\n// `;\n// X console.log(override);\n\ninterface LoadingSpinnerPropTypes {\n  color: string;\n  size: number;\n}\n\nconst SPINNER_SIZE = 40;\n\nconst LoadingSpinner = ({ color = \"#FFFFFF\",\n  size = SPINNER_SIZE }: LoadingSpinnerPropTypes): JSX.Element => (\n  // <ClipLoader color={color} loading={true} size={size} />\n  <span>Loading ...</span>\n);\n\nexport default LoadingSpinner;\n","import React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport MainHeader from \"../../components/MainHeader/MainHeader\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport { BuyableItem } from \"../../types/BuyableItem\";\nimport { sendData } from \"../../util/ApiTools\";\nimport ShoppingItem from \"./ShoppingItem\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\n\n// eslint-disable-next-line max-lines-per-function\nconst ShoppingList = (): JSX.Element => {\n\n  // Shopping Items\n  const [items, setItems] = useState<BuyableItem[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Reference to add-box input\n  const titleInputRef = React.useRef<HTMLInputElement>(null);\n\n  const readShoppingItemsData = async () => {\n\n    setIsLoading(true);\n    try {\n\n      //const data = await getData(\"shoppingList\");\n      const data = [\n        {\n          id: 1,\n          title: \"مرغ\",\n          isBought: false,\n          createDate: new Date(),\n          description: \"دو عدد ران\"\n        },\n        {\n          id: 2,\n          title: \"ماهی\",\n          isBought: true,\n          createDate: new Date(),\n          description: \"دو عدد ماهی قزل آلا بدون پوست\"\n        },\n        {\n          id: 3,\n          title: \"قارچ\",\n          isBought: false,\n          createDate: new Date(),\n        }\n      ]\n      setItems(data);\n\n    } catch (err) {\n\n      // eslint-disable-next-line no-console\n      console.log(\"Error in reading shopping list :\", err);\n\n    }\n    setIsLoading(false);\n\n  };\n\n  const createShoppingItem = async (title: string) => {\n\n    setIsLoading(true);\n    try {\n\n      const result = await sendData(\"shoppingItem/create\", {\n        \"title\": title || \"<No Title>\",\n      });\n      toast.success(\"«\" + result.title + \"» با موفقیت به لیست اضافه شد\");\n      // X console.log(result);\n\n    } catch (err) {\n\n      // eslint-disable-next-line no-console\n      console.log(\"Error in creating shopping item :\", err);\n\n    }\n    setIsLoading(false);\n\n  };\n\n  const ENTER_KEY_CODE = 13;\n  const addClickHandle = async (event: any) => {\n\n    if (event.charCode === ENTER_KEY_CODE) {\n\n      await createShoppingItem(event.target.value);\n\n      // Clear the add-box input\n      if (titleInputRef !== null && titleInputRef.current !== null) {\n\n        titleInputRef.current.value = \"\";\n\n      }\n\n      // Read the new added item\n      readShoppingItemsData();\n\n    }\n\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const shoppingItemCheckHandle = (itemId: number): void => {\n    // X alert(itemId);\n  };\n\n  useEffect(() => {\n\n    readShoppingItemsData();\n\n    return () => {\n      // Cleanup\n    };\n\n  }, []);\n\n  return (\n    <div className=\"h-full\">\n      <MainHeader />\n      <div className=\"flex justify-center items-center px-4 pt-1 pb-3 sticky box-border top-0 w-full bg-my-violet\">\n        <input type=\"text\"\n          onKeyPress={addClickHandle}\n          className=\"px-3 py-2 w-full border-none rounded-md\"\n          // eslint-disable-next-line no-return-assign\n          // X ref={(el) => titleInputRef = el}\n        />\n      </div>\n      <div className=\"w-full overflow-auto\" style={{height: 'calc(100% - 74px - 60px)', top: '74px'}}>\n        <ul className=\"list-none m-0 p-4\">\n          {\n            isLoading ? <LoadingSpinner color={\"\"} size={0} /> : null\n          }\n          {\n            // eslint-disable-next-line no-magic-numbers\n            !isLoading && items.length === 0\n              ? <span>No Items in list</span>\n              : null\n          }\n          {\n            // eslint-disable-next-line no-magic-numbers\n            !isLoading && items.length > 0\n              ? items.map((item:any) => <ShoppingItem\n                item={item}\n                onChange={shoppingItemCheckHandle}\n                key={item.id}\n              />)\n              : null\n          }\n        </ul>\n      </div>\n      <NavBar />\n    </div>\n  );\n\n};\n\nexport default ShoppingList;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport NavBar from \"../../components/NavBar/NavBar\";\n\nconst Messenger = (): JSX.Element => {\n\n  // eslint-disable-next-line id-length\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"text-center\" style={{ height: 'calc(100% - 74px)' }}>\n        <h2>{ t(\"messenger\") }</h2>\n        <h3>{ t(\"comming_soon\") }</h3>\n      </div>\n\n      <NavBar />\n    </div>\n  );\n\n};\n\nexport default Messenger;\n","import React, { useState } from \"react\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport i18next from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Settings = (): JSX.Element => {\n\n  const [lang, setLang] = useState(\"فارسی\");\n\n  // eslint-disable-next-line id-length\n  const { t } = useTranslation();\n\n  const changeLanguage = () => {\n\n    const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\n    if (selected === \"en\") {\n\n      localStorage.setItem(\"i18nextLng\", \"fa\");\n      i18next.changeLanguage(\"fa\");\n      // X console.log(\"fa\");\n      setLang(\"فارسی\");\n\n    } else {\n\n      localStorage.setItem(\"i18nextLng\", \"en\");\n      i18next.changeLanguage(\"en\");\n      // X console.log(\"en\");\n      setLang(\"English\");\n\n    }\n\n  };\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"text-center\" style={{ height: 'calc(100% - 74px)' }}>\n        <h2>{ t(\"settings\") }</h2>\n        <hr />\n\n        <span>{ t(\"language\") } :</span>\n        <br />\n        <button onClick={changeLanguage}\n          className=\"bg-my-violet text-white p-1 rounded-md min-w-100\n          hover:bg-my-violet-light hover:shadow-lg\"\n          //focus:bg-my-violet-light focus:ring-4 ring-my-violet\"\n        >\n          {lang}\n        </button>\n      </div>\n\n      <NavBar />\n    </div>\n  );\n\n};\n\nexport default Settings;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { UserContext } from \"./util/userContext\";\nimport NotFoundPage from './containers/NotFoundPage/NotFoundPage';\nimport Login from './containers/Login/Login';\nimport ShoppingList from './containers/ShoppingList/ShoppingList';\nimport Messenger from './containers/Messenger/Messenger';\nimport Settings from './containers/Settings/Settings';\n\nfunction App(): JSX.Element {\n  console.log(\"Render app module in react\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState<any>(null);\n\n  const checkLogin = () => {\n\n    const userInfoResult = {\n      \"id\": 1,\n      \"userName\": \"emit\",\n      \"firstName\": \"عماد\",\n      \"lastName\": \"آرمون\",\n    };\n    setUserInfo(userInfoResult);\n    setIsLoggedIn(true);\n\n  };\n\n  useEffect(() => {\n\n    checkLogin();\n    // X return () => {}\n\n  }, []);\n\n  const mainRoutes = () => (\n    <Switch>\n      <Route path=\"/\" component={ShoppingList} />\n      <Route path=\"/messenger\" component={Messenger} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/404\" component={NotFoundPage} />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  );\n\n  return (\n    <div className=\"container mx-auto h-full bg-white\" data-test=\"app-wrapper\">\n      <BrowserRouter>\n        <UserContext.Provider value={userInfo}>\n          {isLoggedIn\n            ? mainRoutes()\n            : <Switch>\n              <Route exact path=\"*\" component={Login} />\n            </Switch>}\n          <ToastContainer\n            rtl draggable closeOnClick position=\"bottom-center\"\n            className=\"toast-box\" />\n        </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport \"./i18nextInit\";\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}